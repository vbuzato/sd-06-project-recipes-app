{"version":3,"sources":["images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/shareIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/loader.gif","context/RevenueContext.js","pages/Login.js","components/Footer.js","components/Search.js","components/CategoryButton.js","components/Header.js","components/Loading.js","pages/Foods.js","pages/Profile.js","pages/Explore.js","pages/ExploreFood.js","components/RecipesButtons.js","components/ShareButton.js","pages/DoneRecipes.js","pages/FavoriteRecipes.js","pages/ExploreIngredient.js","pages/ExploreArea.js","pages/MainPage.js","components/RecommendedRecipes.js","pages/RecipeDetails.js","pages/NotFound.js","App.js","serviceWorker.js","context/Provider.js","index.js"],"names":["module","exports","RevenueContext","createContext","Login","useContext","email","setEmail","password","setPassword","useState","disable","setDisable","handleChange","target","name","value","validEmail","test","validPassword","inputValidate","checkUser","JSON","parse","localStorage","getItem","console","log","loginCheck","className","htmlFor","type","data-testid","onChange","e","placeholder","to","disabled","onClick","setItem","stringify","Footer","setSearchParam","href","src","DrinksIcon","alt","ExploreIcon","MealIcon","SearchBar","props","fetchApi","searchParam","title","searchInputValue","setsearchInputValue","searchRadioValue","setsearchRadioValue","URLToFetch","setURLToFetch","useEffect","URLs","foodFirstLetter","foodIngredient","foodName","drinkFirstLetter","drinkIngredient","drinkName","handleRadioValue","Container","id","handleChangeInputValue","length","alert","CategoryButton","foodOrDrink","generalAPI","linkCategoriesAPI","linkByCategoryAPI","selectedButton","setSelectedButton","foods","categories","fetchCategories","fetchByCategory","idRecipe","useLocation","pathname","split","noFilters","toggleClass","map","category","index","linkAPI","strCategory","key","filterByCategory","renderCategories","Header","search","setSearch","searchButton","ProfileIcon","SearchIcon","Loading","LoadingGif","width","Foods","isLoading","externFetchLink","setexternFetchLink","undefined","idFirstPosition","food","idIngredient","strIngredient","strDescription","match","Profile","user","clear","Explore","ExploreFoods","random","setrandom","fetchRamdom","a","fetch","data","json","meals","idMeal","drinks","idDrink","RecipesButtons","setselectedFilter","ShareButton","setAlert","drinkOrFood","navigator","clipboard","writeText","setTimeout","shareRecipeLink","ShareIcon","DoneRecipes","filteredResults","doneRecipesStorage","doneList","selectedFilter","filter","item","detailRoute","image","area","alcoholicOrNot","doneDate","tags","tagName","i","FavoriteRecipes","favoriteRecipesStorage","favoriteList","update","setupdate","splice","indexOf","find","favorite","BlackHeartIcon","ExploreIngredient","ingredients","setingredients","fetchIngredients","jsonIngredients","ingredient","ingredientName","baseApi","strIngredient1","filterByIngredient","ExploreArea","dropdown","setdropdown","setdata","dataAreas","jsonAreas","dataFood","jsonFood","fetchAreaList","fetchByArea","strArea","strMealThumb","strMeal","MainPage","mainContent","footerContent","setSearchButton","RecommendedRecipes","recommendations","fetchRecommendations","setIndex","handleSelect","selectedIndex","linkRecommendationsAPI","recommendParam","Carousel","activeIndex","onSelect","recommendedItem","Item","Card","Img","Body","Title","Text","strAlcoholic","renderRecommendations","RecipeDetails","inProgress","setInProgress","localStorageDoneRecipes","localStorageFavorites","setLocalStorageFavorites","localStorageInProgress","WhiteHeartIcon","heartIcon","setheartIcon","alertMsg","setAlertMsg","isChecked","setIsChecked","linkRecipeAPI","actualRecipe","saveDoneRecipe","strTag","Date","toLocaleDateString","newLocalStorageDoneRecipes","push","videoCode","typeFood","isFavorite","strDrink","strDrinkThumb","checkLocalStorageFavorites","getInProgress","strYoutube","check","getInProgressAux","includes","URL","newLocalStorageFavorites","whiteToBlackHeart","ingredientsMeasureArray","measureValue","listContent","pairArray","checked","localStorageInProgressAux","cocktails","handleCheckbox","strInstructions","frameBorder","allow","allowFullScreen","checkProgress","document","querySelectorAll","render","NotFound","App","exact","path","component","Boolean","window","location","hostname","Provider","children","setFoods","setRecommendations","setCategories","setisLoading","setLocalStorageDoneRecipes","setLocalStorageInProgress","response","context","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac17edeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.38354771.gif\";","import { createContext } from 'react';\n\nconst RevenueContext = createContext();\n\nexport default RevenueContext;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function Login() {\n  const { email, setEmail } = useContext(RevenueContext);\n  const { password, setPassword } = useContext(RevenueContext);\n  const [disable, setDisable] = useState(true);\n\n  const loginCheck = () => {\n    const checkUser = JSON.parse(localStorage.getItem('user'));\n    console.log(checkUser);\n  };\n\n  const inputValidate = () => {\n    const validEmail = (/\\S+@\\S+\\.\\S+/).test(email);\n    const validPassword = (password && (/.{6}/).test(password));\n\n    if (validEmail && validPassword === true) {\n      return setDisable(false);\n    }\n    return setDisable(true);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n    inputValidate();\n    loginCheck();\n  };\n\n  const setLocalStorage = () => {\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n  };\n\n  return (\n    <div className=\"bg-login\">\n      <h1 className=\"font-app login-title\">\n        App\n        <br />\n        <span className=\"de-logo\">de</span>\n        <br />\n        Receitas\n      </h1>\n      <form className=\"form-login\">\n        <label htmlFor=\"email\">\n          {/* E-mail: */}\n          <input\n            value={ email }\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"email-input\"\n            onChange={ (e) => handleChange(e) }\n            placeholder=\"E-mail\"\n          />\n        </label>\n        <label htmlFor=\"password\">\n          {/* Password: */}\n          <input\n            value={ password }\n            name=\"password\"\n            type=\"password\"\n            data-testid=\"password-input\"\n            onChange={ (e) => handleChange(e) }\n            placeholder=\"Password\"\n          />\n        </label>\n        <Link to=\"/comidas\">\n          <button\n            data-testid=\"login-submit-btn\"\n            disabled={ disable }\n            type=\"button\"\n            onClick={ setLocalStorage }\n            className=\"bt-login font-app\"\n          >\n            Entrar\n          </button>\n        </Link>\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport DrinksIcon from '../images/drinkIcon.svg';\nimport ExploreIcon from '../images/exploreIcon.svg';\nimport MealIcon from '../images/mealIcon.svg';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function Footer() {\n  const { setSearchParam } = useContext(RevenueContext);\n  return (\n    <footer data-testid=\"footer\">\n      <div className=\"footer-icons justify-content-around\">\n        <Link to=\"/bebidas\">\n          <a href onClick={ () => setSearchParam('Drink') }>\n            <img\n              src={ DrinksIcon }\n              alt=\"Drinks\"\n              data-testid=\"drinks-bottom-btn\"\n              className=\"bt-icon-footer\"\n            />\n          </a>\n        </Link>\n        <Link to=\"/explorar\">\n          <img\n            src={ ExploreIcon }\n            alt=\"Profile\"\n            data-testid=\"explore-bottom-btn\"\n            className=\"bt-icon-footer\"\n          />\n        </Link>\n        <Link to=\"/comidas\">\n          <a href onClick={ () => setSearchParam('Meal') }>\n            <img\n              src={ MealIcon }\n              alt=\"Profile\"\n              data-testid=\"food-bottom-btn\"\n              className=\"bt-icon-footer\"\n            />\n          </a>\n        </Link>\n      </div>\n    </footer>);\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function SearchBar(props) {\n  const { fetchApi, searchParam, setSearchParam } = useContext(RevenueContext);\n  const { title } = props;\n  const [searchInputValue, setsearchInputValue] = useState();\n  const [searchRadioValue, setsearchRadioValue] = useState();\n  const [URLToFetch, setURLToFetch] = useState();\n  // const [alert, setAlert] = useState();\n  // const [time] = useState(5000);\n\n  useEffect(() => {\n    if (!URLToFetch && searchParam === 'Meal') fetchApi('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    if (!URLToFetch && searchParam === 'Drink') fetchApi('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    if (URLToFetch) fetchApi(URLToFetch);\n  }, [URLToFetch]);\n\n  const URLs = {\n    foodFirstLetter: `https://www.themealdb.com/api/json/v1/1/search.php?f=${searchInputValue}`,\n    foodIngredient: `https://www.themealdb.com/api/json/v1/1/filter.php?i=${searchInputValue}`,\n    foodName: `https://www.themealdb.com/api/json/v1/1/search.php?s=${searchInputValue}`,\n    drinkFirstLetter: `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${searchInputValue}`,\n    drinkIngredient: `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${searchInputValue}`,\n    drinkName: `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchInputValue}`,\n  };\n\n  const handleChangeInputValue = ({ target: { value } }) => {\n    setsearchInputValue(value);\n  };\n  const handleRadioValue = ({ target: { value } }) => {\n    setsearchRadioValue(value);\n  };\n\n  // const showAlert = (content) => {\n  //   setAlert(content);\n  //   setTimeout(() => {\n  //     setAlert(undefined);\n  //   }, time);\n  // };\n\n  const searchURL = () => {\n    if (searchInputValue\n      && searchRadioValue === 'first-letter'\n      && searchInputValue.length !== 1) {\n      // showAlert('Sua busca deve conter somente 1 (um) caracter');\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      if (title === 'Comidas') {\n        setSearchParam('Meal');\n        if (searchRadioValue === 'first-letter') {\n          setURLToFetch(URLs.foodFirstLetter);\n        }\n        if (searchRadioValue === 'ingredient') {\n          setURLToFetch(URLs.foodIngredient);\n        }\n        if (searchRadioValue === 'name') {\n          setURLToFetch(URLs.foodName);\n        }\n      }\n      if (title === 'Bebidas') {\n        setSearchParam('Drink');\n        if (searchRadioValue === 'first-letter') {\n          setURLToFetch(URLs.drinkFirstLetter);\n        }\n        if (searchRadioValue === 'ingredient') {\n          setURLToFetch(URLs.drinkIngredient);\n        }\n        if (searchRadioValue === 'name') {\n          setURLToFetch(URLs.drinkName);\n        }\n      }\n    }\n  };\n\n  return (\n    <Container className=\"align-items-center\">\n      <form data-testid=\"test-search-bar\" className=\"search-bar\">\n        <div>\n          <label htmlFor=\"search-input\">\n            <input\n              data-testid=\"search-input\"\n              type=\"text\"\n              id=\"search-input\"\n              name=\"searh-input\"\n              placeholder=\"Buscar Receita\"\n              onChange={ (e) => handleChangeInputValue(e) }\n              className=\"input-field\"\n            />\n          </label>\n        </div>\n        <div className=\"filter-radios\">\n          <label htmlFor=\"ingredient\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              type=\"radio\"\n              id=\"ingredient\"\n              value=\"ingredient\"\n              name=\"radio-selection\"\n              onChange={ (e) => handleRadioValue(e) }\n            />\n            <b>Ingrediente</b>\n          </label>\n          <label htmlFor=\"name\">\n            <input\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              id=\"name\"\n              value=\"name\"\n              name=\"radio-selection\"\n              onChange={ (e) => handleRadioValue(e) }\n            />\n            <b>Nome</b>\n          </label>\n          <label htmlFor=\"first-letter\">\n            <input\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              id=\"first-letter\"\n              value=\"first-letter\"\n              name=\"radio-selection\"\n              onChange={ (e) => handleRadioValue(e) }\n            />\n            <b>Primeira Letra</b>\n          </label>\n        </div>\n      </form>\n\n      <div>\n        <button\n          data-testid=\"exec-search-btn\"\n          className=\"bt-login font-app bottom15px\"\n          type=\"button\"\n          onClick={ () => (\n            (searchInputValue && searchRadioValue)\n              ? searchURL()\n              // : showAlert('Preencha campo de busca e selecione ao menos uma opção')\n              : alert('Preencha campo de busca e selecione ao menos uma opção')\n          ) }\n        >\n          Buscar\n        </button>\n      </div>\n      {/* {alert && <Row>{alert}</Row>} */}\n    </Container>\n  );\n}\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function CategoryButton() {\n  const [selectedButton, setSelectedButton] = useState('All');\n  const { foods, categories, fetchCategories, searchParam,\n    setSearchParam, fetchByCategory, fetchApi } = useContext(RevenueContext);\n\n  const location = useLocation();\n  const idRecipe = location.pathname.split('/');\n  let foodOrDrink;\n  if (idRecipe[1] === 'comidas') {\n    setSearchParam('Meal');\n    foodOrDrink = 'meals';\n  }\n  if (idRecipe[1] === 'bebidas') {\n    setSearchParam('Drink');\n    foodOrDrink = 'drinks';\n  }\n\n  let generalAPI;\n  let linkCategoriesAPI;\n  let linkByCategoryAPI;\n  if (searchParam === 'Meal') {\n    generalAPI = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    linkCategoriesAPI = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    linkByCategoryAPI = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\n  } else {\n    generalAPI = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    linkCategoriesAPI = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    linkByCategoryAPI = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\n  }\n\n  useEffect(() => {\n    fetchCategories(linkCategoriesAPI);\n  }, [searchParam, foods]);\n\n  const filterByCategory = (category, linkAPI) => {\n    if (category !== selectedButton) {\n      setSelectedButton(category);\n      fetchByCategory(linkAPI);\n    } else {\n      setSelectedButton('All');\n      fetchApi(generalAPI);\n    }\n  };\n\n  const noFilters = () => {\n    setSelectedButton('All');\n    fetchApi(generalAPI);\n  };\n\n  const renderCategories = () => {\n    if (categories[foodOrDrink]) {\n      const CINCO = 5;\n      let toggleClass = (selectedButton === 'All') ? 'selected-category' : '';\n      return (\n        <div className=\"d-flex justify-content-around align-items-center flex-wrap\">\n          <button\n            className={ `bt-categories ${toggleClass}` }\n            type=\"button\"\n            onClick={ noFilters }\n            data-testid=\"All-category-filter\"\n          >\n            All\n          </button>\n          {categories[foodOrDrink].map((category, index) => {\n            if (index < CINCO) {\n              const linkAPI = `${linkByCategoryAPI}${category.strCategory}`;\n              toggleClass = (selectedButton === category.strCategory)\n                ? 'selected-category' : '';\n              return (\n                <button\n                  key={ index }\n                  data-testid={ `${category.strCategory}-category-filter` }\n                  className={ `bt-categories ${toggleClass}` }\n                  type=\"button\"\n                  onClick={ () => filterByCategory(category.strCategory, linkAPI) }\n                >\n                  {category.strCategory.split('/')[0]}\n                </button>\n              );\n            }\n            return null;\n          })}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div>\n      {(categories) ? renderCategories() : 'Loading...'}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\nimport ProfileIcon from '../images/profileIcon.svg';\nimport SearchIcon from '../images/searchIcon.svg';\nimport RevenueContext from '../context/RevenueContext';\nimport SearchBar from './Search';\nimport CategoryButton from './CategoryButton';\n\nexport default function Header(props) {\n  const { title } = props;\n  const { search, setSearch, searchButton } = useContext(RevenueContext);\n  const searchButtonHidden = () => (\n    <a\n      href\n      data-testid=\"test-search-top-btn\"\n      type=\"button\"\n      onClick={ () => {\n        setSearch(!search);\n      } }\n      className=\"button-standard\"\n    >\n      <img src={ SearchIcon } alt=\"Profile\" data-testid=\"search-top-btn\" />\n    </a>\n  );\n  return (\n    <header data-testid=\"test-header\">\n      <Container>\n        <div className=\"header-component\">\n          <div className=\"bt-icon\">\n            <Link to=\"/perfil\" data-testid=\"test-profile-top-btn\">\n              <img src={ ProfileIcon } alt=\"Profile\" data-testid=\"profile-top-btn\" />\n            </Link>\n          </div>\n          <h1\n            className=\"center font-app title-header\"\n            data-testid=\"page-title\"\n          >\n            {title}\n          </h1>\n          <div className=\"bt-icon\">\n            <span>{!searchButton && searchButtonHidden()}</span>\n          </div>\n        </div>\n        {search && <SearchBar title={ title } />}\n        {!search && <CategoryButton />}\n      </Container>\n      <div className=\"color-line\" />\n    </header>\n\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport LoadingGif from '../images/loader.gif';\n\nexport default function Loading() {\n  return (\n    <div className=\"loading\">\n      <img src={ LoadingGif } alt=\"Loading\" width=\"70px\" />\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function Foods() {\n  const { foods, fetchApi, searchParam,\n    isLoading, externFetchLink, setexternFetchLink } = useContext(RevenueContext);\n  const TWELVE = 12;\n  const ZERO = 0;\n\n  useEffect(() => {\n    if (!externFetchLink) {\n      if (searchParam === 'Meal') {\n        fetchApi('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      } else if (searchParam === 'Drink') {\n        fetchApi('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      }\n    } else {\n      fetchApi(externFetchLink);\n    }\n\n    return () => {\n      setexternFetchLink(undefined);\n    };\n  }, [searchParam]);\n\n  const foodOrDrink = (searchParam === 'Meal') ? 'comidas' : 'bebidas';\n  const idFirstPosition = (foods && foods.length !== ZERO)\n    ? foods[0][`id${searchParam}`]\n    : null;\n  const renderFoodOrDrink = () => (\n    <>\n      {(foods\n        && foods.length === 1\n        && !foods[0][`str${searchParam}`].match(/Goat/))\n        ? <Redirect to={ `/${foodOrDrink}/${idFirstPosition}` } /> : null}\n      {foods && foods.map((food, index) => {\n        const id = food[`id${searchParam}`];\n        if (index < TWELVE && (index < foods.length)) {\n          return (\n            <Link to={ `/${foodOrDrink}/${id}` }>\n              <div\n                key={ id }\n                data-testid={ `${index}-recipe-card` }\n                className=\"card-recipe-style\"\n              >\n                <img\n                  src={ foods[index][`str${searchParam}Thumb`] }\n                  alt={ foods[index][`str${searchParam}`] }\n                  data-testid={ `${index}-card-img` }\n                  className=\"img-recipe-thumb\"\n                />\n                <h3 data-testid={ `${index}-card-name` } className=\"name-recipe-thumb\">\n                  {foods[index][`str${searchParam}`]}\n                </h3>\n              </div>\n            </Link>\n          );\n        }\n        return null;\n      })}\n    </>);\n\n  const renderIngredients = () => (\n    <>\n      {foods.map((food, index) => {\n        if (index < TWELVE) {\n          return (\n            <div key={ food.idIngredient }>\n              <h3>{ food.strIngredient }</h3>\n              <p>{food.strDescription}</p>\n            </div>\n          );\n        }\n        return '';\n      })}\n    </>\n  );\n\n  if (!isLoading) {\n    return (\n      <div className=\"wrap-food\">\n        {(searchParam === 'Ingredients') ? renderIngredients() : renderFoodOrDrink()}\n      </div>\n    );\n  }\n  return <Loading />;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Profile() {\n  let email = '';\n  if (localStorage.user) {\n    const userStorage = JSON.parse(localStorage.user);\n    email = userStorage.email;\n  }\n  return (\n    <div>\n      <div data-testid=\"profile-email\" className=\"email-profile\">\n        {email}\n      </div>\n      <div className=\"wrap-profile\">\n        <Link to=\"receitas-feitas\">\n          <button\n            data-testid=\"profile-done-btn\"\n            type=\"button\"\n            className=\"bt-login font-app bt-space\"\n          >\n            Receitas Feitas\n          </button>\n        </Link>\n        <Link to=\"receitas-favoritas\">\n          <button\n            data-testid=\"profile-favorite-btn\"\n            type=\"button\"\n            className=\"bt-login font-app bt-space\"\n          >\n            Receitas Favoritas\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            className=\"bt-login font-app bt-space\"\n            data-testid=\"profile-logout-btn\"\n            type=\"button\"\n            onClick={ () => localStorage.clear() }\n          >\n            Sair\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Explore() {\n  return (\n    <div className=\"container\">\n      <Link to=\"/explorar/comidas\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-food\"\n          className=\"bt-login bt-space font-app\"\n        >\n          Explorar Comidas\n        </button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-drinks\"\n          className=\"bt-login bt-space font-app\"\n        >\n          Explorar Bebidas\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\n\nexport default function ExploreFoods() {\n  const location = useLocation();\n  const title = location.pathname.split('/')[2];\n\n  const [random, setrandom] = useState();\n\n  useEffect(() => {}, [random]);\n\n  const fetchRamdom = async () => {\n    let linkAPI = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    if (title === 'bebidas') linkAPI = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\n    const data = await fetch(linkAPI);\n    const json = await data.json();\n    const id = (title === 'comidas') ? json.meals[0].idMeal : json.drinks[0].idDrink;\n    setrandom(`/${title}/${id}`);\n  };\n\n  return (\n    <div className=\"wrap-profile\">\n      {(random) ? <Redirect to={ random } /> : null}\n      <Link to={ `/explorar/${title}/ingredientes` }>\n        <button\n          type=\"button\"\n          className=\"bt-login bt-space font-app\"\n          data-testid=\"explore-by-ingredient\"\n        >\n          Por Ingredientes\n        </button>\n      </Link>\n\n      {(title === 'comidas') ? (\n        <Link to=\"/explorar/comidas/area\">\n          <button\n            type=\"button\"\n            className=\"bt-login bt-space font-app\"\n            data-testid=\"explore-by-area\"\n          >\n            Por Local de Origem\n          </button>\n        </Link>)\n        : ''}\n      <Link to={ `/explorar/${title}` }>\n        <button\n          type=\"button\"\n          className=\"bt-login bt-space font-app\"\n          data-testid=\"explore-surprise\"\n          onClick={ fetchRamdom }\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function RecipesButtons({ setselectedFilter }) {\n  return (\n    <div className=\"bt-group\">\n      <button\n        type=\"button\"\n        className=\"bt-categories\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ () => setselectedFilter('All') }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"bt-categories\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ () => setselectedFilter('Meal') }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"bt-categories\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ () => setselectedFilter('Drink') }\n      >\n        Drinks\n      </button>\n    </div>\n  );\n}\n\nRecipesButtons.propTypes = {\n  setselectedFilter: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ShareIcon from '../images/shareIcon.svg';\n\nexport default function ShareButton({ index, id, type }) {\n  const [alert, setAlert] = useState();\n  // console.log(type);\n  function shareRecipeLink() {\n    const drinkOrFood = (type === 'Meal' || type === 'comida')\n      ? '/comidas/' : '/bebidas/';\n    const time = 5000;\n    navigator.clipboard.writeText(`http://localhost:3000${drinkOrFood}${id}`);\n    setAlert(true);\n    setTimeout(() => {\n      setAlert(false);\n    }, time);\n  }\n\n  return (\n    <button className=\"button-standard\" type=\"button\" onClick={ () => shareRecipeLink() }>\n      <img\n        src={ ShareIcon }\n        alt=\"Share Button\"\n        data-testid={ `${index}-horizontal-share-btn` }\n      />\n      {alert && <alert>Link copiado!</alert>}\n    </button>\n  );\n}\n\nShareButton.propTypes = {\n  index: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipesButtons from '../components/RecipesButtons';\nimport ShareButton from '../components/ShareButton';\n\nexport default function DoneRecipes() {\n  const ZERO = 0;\n  const doneRecipesStorage = localStorage.getItem('doneRecipes'); // TROCAR favoriteRecipes POR doneRecipes\n  const doneList = JSON.parse(doneRecipesStorage);\n  const [selectedFilter, setselectedFilter] = useState('All');\n\n  let filteredResults;\n  if (selectedFilter === 'All') filteredResults = (doneList) ? [...doneList] : [];\n  if (selectedFilter === 'Meal') {\n    filteredResults = doneList\n      .filter((item) => item.type === selectedFilter || item.type === 'comida');\n  }\n  if (selectedFilter === 'Drink') {\n    filteredResults = doneList\n      .filter((item) => item.type === selectedFilter || item.type === 'bebida');\n  }\n\n  const detailRoute = (id, type) => {\n    const drinkOrFood = (type === 'Meal' || type === 'comida')\n      ? '/comidas/' : '/bebidas/';\n    return `${drinkOrFood}${id}`;\n  };\n\n  return (\n    <div>\n      <RecipesButtons setselectedFilter={ setselectedFilter } />\n      {doneList && filteredResults.map((item, index) => (\n        <div key={ index } className=\"cardRecipe\">\n          <Link to={ () => detailRoute(item.id, item.type) }>\n            <img\n              src={ item.image }\n              alt={ item.name }\n              data-testid={ `${index}-horizontal-image` }\n              className=\"imageCardRecipe\"\n            />\n          </Link>\n          <div className=\"textBoxCard\">\n            {(item.type === 'Meal' || item.type === 'comida')\n              ? (\n                <span data-testid={ `${index}-horizontal-top-text` }>\n                  {item.area}\n                  {' '}\n                  -\n                  {' '}\n                  {item.category}\n                </span>\n              )\n              : ''}\n            {(item.type === 'Drink' || item.type === 'bebida')\n              ? (\n                <span data-testid={ `${index}-horizontal-top-text` }>\n                  {item.alcoholicOrNot}\n                </span>\n              )\n              : ''}\n            <Link to={ () => detailRoute(item.id, item.type) }>\n              <h2 data-testid={ `${index}-horizontal-name` } className=\"name-recipe-item\">\n                {item.name}\n              </h2>\n            </Link>\n            <p data-testid={ `${index}-horizontal-done-date` }>{item.doneDate}</p>\n            {(item.tags.length > ZERO) && item.tags.map((tagName, i) => (\n              <div\n                key={ i }\n                className=\"tagRecipe\"\n                data-testid={ `${index}-${tagName}-horizontal-tag` }\n              >\n                {tagName}\n              </div>\n            ))}\n            {/* Descomentar o código acima quando\n            TROCAR favoriteRecipes POR doneRecipes */}\n            <ShareButton index={ index } id={ item.id } type={ item.type } />\n          </div>\n          <div />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipesButtons from '../components/RecipesButtons';\nimport ShareButton from '../components/ShareButton';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function FavoriteRecipes() {\n  const favoriteRecipesStorage = localStorage.getItem('favoriteRecipes');\n  const favoriteList = JSON.parse(favoriteRecipesStorage);\n  const [selectedFilter, setselectedFilter] = useState('All');\n  const [update, setupdate] = useState(true);\n\n  let filteredResults;\n  if (selectedFilter === 'All') filteredResults = (favoriteList) ? [...favoriteList] : [];\n  if (selectedFilter === 'Meal') {\n    filteredResults = favoriteList\n      .filter((item) => item.type === selectedFilter || item.type === 'comida');\n  }\n  if (selectedFilter === 'Drink') {\n    filteredResults = favoriteList\n      .filter((item) => item.type === selectedFilter || item.type === 'bebida');\n  }\n  const detailRoute = (id, type) => {\n    const drinkOrFood = (type === 'Meal' || type === 'comida')\n      ? '/comidas/' : '/bebidas/';\n    return `${drinkOrFood}${id}`;\n  };\n\n  useEffect(() => {\n    // console.log('update');\n  }, [update]);\n\n  function handleLocalStorage(id) {\n    const newLocalStorageFavorites = favoriteList;\n    newLocalStorageFavorites\n      .splice(favoriteList\n        .indexOf(favoriteList\n          .find((favorite) => favorite.id === id)), 1);\n    localStorage\n      .setItem('favoriteRecipes', JSON\n        .stringify(favoriteList));\n    setupdate(!update);\n  }\n\n  return (\n    <div>\n      <RecipesButtons setselectedFilter={ setselectedFilter } />\n      {favoriteList && filteredResults.map((item, index) => (\n        <div key={ index } className=\"cardRecipe\">\n          <Link to={ () => detailRoute(item.id, item.type) }>\n            <img\n              src={ item.image }\n              alt={ item.name }\n              data-testid={ `${index}-horizontal-image` }\n              className=\"imageCardRecipe\"\n            />\n          </Link>\n          <div className=\"textBoxCard\">\n            {(item.type === 'Meal' || item.type === 'comida')\n              ? (\n                <span data-testid={ `${index}-horizontal-top-text` }>\n                  {item.area}\n                  {' '}\n                  -\n                  {' '}\n                  {item.category}\n                </span>\n              )\n              : ''}\n            {(item.type === 'Drink' || item.type === 'bebida')\n              ? (\n                <span data-testid={ `${index}-horizontal-top-text` }>\n                  {item.alcoholicOrNot}\n                </span>\n              )\n              : ''}\n            <Link to={ () => detailRoute(item.id, item.type) }>\n              <h2 data-testid={ `${index}-horizontal-name` } className=\"name-recipe-item\">\n                {item.name}\n              </h2>\n            </Link>\n            <button\n              className=\"button-standard\"\n              type=\"button\"\n              data-testid=\"handle-local-storage-btn\"\n              onClick={ () => handleLocalStorage(item.id) }\n            >\n              <img\n                src={ BlackHeartIcon }\n                alt=\"Favorite Button\"\n                data-testid={ `${index}-horizontal-favorite-btn` }\n              />\n            </button>\n            <ShareButton index={ index } id={ item.id } type={ item.type } />\n          </div>\n          <div />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport RevenueContext from '../context/RevenueContext';\n\nexport default function ExploreIngredient() {\n  const location = useLocation();\n  const title = location.pathname.split('/')[2];\n\n  const { setexternFetchLink } = useContext(RevenueContext);\n\n  const [ingredients, setingredients] = useState();\n\n  const fetchIngredients = async () => {\n    let linkAPI = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n    if (title === 'bebidas') linkAPI = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n\n    const data = await fetch(linkAPI);\n    const json = await data.json();\n    const jsonIngredients = (title === 'comidas')\n      ? json.meals\n      : json.drinks;\n    setingredients(jsonIngredients);\n  };\n\n  useEffect(() => { fetchIngredients(); }, []);\n\n  const filterByIngredient = (ingredientName) => {\n    if (title === 'comidas') {\n      setexternFetchLink(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredientName}`);\n      return '/comidas';\n    }\n    setexternFetchLink(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredientName}`);\n    return '/bebidas';\n  };\n\n  const renderIngredients = () => (\n    ingredients.map((ingredient, index) => {\n      const DOZE = 12;\n      let ingredientName;\n      let baseApi;\n      if (title === 'comidas') {\n        ingredientName = ingredient.strIngredient;\n        baseApi = 'themealdb';\n      } else {\n        ingredientName = ingredient.strIngredient1;\n        baseApi = 'thecocktaildb';\n      }\n      if (index < DOZE) {\n        return (\n          <div\n            key={ index }\n            className=\"cardIngredients\"\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <Link\n              className=\"imageCardIngredients\"\n              to={ () => filterByIngredient(ingredientName) }\n            >\n              <img\n                src={ `https://www.${baseApi}.com/images/ingredients/${ingredientName}-Small.png` }\n                alt={ ingredientName }\n                data-testid={ `${index}-card-img` }\n              />\n              <h5 data-testid={ `${index}-card-name` } className=\"name-recipe-explore\">\n                {ingredientName}\n              </h5>\n            </Link>\n          </div>\n        );\n      }\n      return null;\n    })\n  );\n\n  return (\n    <div className=\"ingredients-explore\">\n      {(ingredients) ? renderIngredients() : <Loading />}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ExploreArea() {\n  const [dropdown, setdropdown] = useState();\n  const [data, setdata] = useState();\n\n  useEffect(() => {\n    const fetchAreaList = async () => {\n      const dataAreas = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n      const jsonAreas = await dataAreas.json();\n      setdropdown(jsonAreas.meals);\n      const dataFood = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const jsonFood = await dataFood.json();\n      setdata(jsonFood.meals);\n    };\n    fetchAreaList();\n  }, []);\n\n  const fetchByArea = async ({ target }) => {\n    const dataAreas = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${target.value}`);\n    const jsonAreas = await dataAreas.json();\n    setdata(jsonAreas.meals);\n  };\n\n  return (\n    <div className=\"content-select-explore\">\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        onChange={ fetchByArea }\n        className=\"select-explore-origin\"\n      >\n        <option value=\"All\" data-testid=\"All-option\">All</option>\n        {(dropdown) ? dropdown.map((item, index) => (\n          <option\n            key={ index }\n            data-testid={ `${item.strArea}-option` }\n            value={ item.strArea }\n          >\n            {item.strArea}\n\n          </option>\n        ))\n          : null}\n      </select>\n      <div className=\"wrap-food\">\n        {(data) ? data.map((item, index) => {\n          const TWELVE = 12;\n          if (index < TWELVE) {\n            return (\n              <Link to={ `/comidas/${item.idMeal}` }>\n                <div\n                  key={ index }\n                  data-testid={ `${index}-recipe-card` }\n                  className=\"card-recipe-style\"\n                >\n                  <img\n                    src={ item.strMealThumb }\n                    alt={ item.strMeal }\n                    data-testid={ `${index}-card-img` }\n                    className=\"img-recipe-thumb\"\n                  />\n                  <h5 data-testid={ `${index}-card-name` } className=\"name-recipe-thumb\">\n                    {item.strMeal}\n                  </h5>\n                </div>\n              </Link>\n            );\n          }\n          return '';\n        })\n          : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RevenueContext from '../context/RevenueContext';\nimport Foods from './Foods';\nimport Profile from './Profile';\nimport Explore from './Explore';\nimport ExploreFood from './ExploreFood';\nimport DoneRecipes from './DoneRecipes';\nimport FavoriteRecipes from './FavoriteRecipes';\nimport ExploreIngredient from './ExploreIngredient';\nimport ExploreArea from './ExploreArea';\n\nexport default function MainPage(props) {\n  const { title } = props;\n  const { setSearchButton, setSearch, setSearchParam } = useContext(RevenueContext);\n  useEffect(() => {\n    if (title === 'Comidas'\n    || title === 'Bebidas'\n    || title === 'Explorar Origem') {\n      setSearchButton(false);\n    }\n    return () => {\n      setSearchButton(true);\n      setSearch(false);\n    };\n  }, []);\n\n  let mainContent;\n  let footerContent;\n  switch (title) {\n  case 'Comidas':\n    setSearchParam('Meal');\n    mainContent = <Foods />;\n    footerContent = <Footer />;\n    break;\n  case 'Bebidas':\n    setSearchParam('Drink');\n    mainContent = <Foods />;\n    footerContent = <Footer />;\n    break;\n  case 'Explorar':\n    mainContent = <Explore />;\n    footerContent = <Footer />;\n    break;\n  case 'Explorar Comidas':\n    mainContent = <ExploreFood />;\n    footerContent = <Footer />;\n    break;\n  case 'Explorar Bebidas':\n    mainContent = <ExploreFood />;\n    footerContent = <Footer />;\n    break;\n  case 'Explorar Ingredientes':\n    mainContent = <ExploreIngredient />;\n    footerContent = <Footer />;\n    break;\n  case 'Explorar Origem':\n    mainContent = <ExploreArea />;\n    footerContent = <Footer />;\n    break;\n  case 'Perfil':\n    mainContent = <Profile />;\n    footerContent = <Footer />;\n    break;\n  case 'Receitas Feitas':\n    mainContent = <DoneRecipes />;\n    break;\n  case 'Receitas Favoritas':\n    mainContent = <FavoriteRecipes />;\n    break;\n  default:\n    break;\n  }\n  return (\n    <div className=\"main-app\">\n      <Header title={ title } />\n      <main>\n        {mainContent}\n      </main>\n      {footerContent}\n    </div>\n  );\n}\n\nMainPage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Card from 'react-bootstrap/Card';\nimport RevenueContext from '../context/RevenueContext';\n// TIREI O BOOTSTRAP DO CAROUSEL DAQUI\n// https://getbootstrap.com/docs/4.0/components/carousel/#with-controls\n// O MAP QUE FORMOS FAZER TEM QUE PEGAR AS PRIMEIRAS 6 RECEITAS QUE ENCONTRAR DA API\n\nexport default function RecommendedRecipes() {\n  const { recommendations, fetchRecommendations,\n    searchParam } = useContext(RevenueContext);\n  const ZERO = 0;\n  const FIVE = 5;\n  const TWO = 2;\n\n  const [index, setIndex] = useState(ZERO);\n\n  const handleSelect = (selectedIndex) => {\n    setIndex(selectedIndex);\n  };\n\n  const linkRecommendationsAPI = (searchParam === 'Meal')\n    ? 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n    : 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\n  useEffect(() => {\n    fetchRecommendations(linkRecommendationsAPI);\n  }, []);\n\n  const renderRecommendations = () => {\n    const recommendParam = (searchParam === 'Meal') ? 'Drink' : 'Meal';\n    return (\n      <div className=\"carousel\">\n        <Carousel activeIndex={ index } onSelect={ handleSelect }>\n          {recommendations.map((recommendedItem, i) => {\n            if (i < FIVE && (i % TWO === ZERO)) {\n              return (\n                <Carousel.Item>\n                  <div className=\"d-flex row-cols-2 justify-content-around\">\n                    <Card data-testid={ `${i}-recomendation-card` } className=\"font-app\">\n                      <Card.Img\n                        src={ recommendations[i][`str${recommendParam}Thumb`] }\n                        alt={ recommendations[i][`str${recommendParam}`] }\n                      />\n                      <Card.Body>\n                        <Card.Title data-testid={ `${i}-recomendation-title` }>\n                          <h3>\n                            { recommendations[i][`str${recommendParam}`] }\n                          </h3>\n                        </Card.Title>\n                        <Card.Text>\n                          <h6 data-testid=\"recipe-category\">\n                            { searchParam === 'Drink'\n                              ? recommendations[i].strCategory\n                              : recommendations[i].strAlcoholic }\n                          </h6>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                    <Card\n                      data-testid={ `${i + 1}-recomendation-card` }\n                      className=\"font-app\"\n                    >\n                      <Card.Img\n                        src={ recommendations[i + 1][`str${recommendParam}Thumb`] }\n                        alt={ recommendations[i + 1][`str${recommendParam}`] }\n                      />\n                      <Card.Body>\n                        <Card.Title data-testid={ `${i + 1}-recomendation-title` }>\n                          <h3>\n                            { recommendations[i + 1][`str${recommendParam}`] }\n                          </h3>\n                        </Card.Title>\n                        <Card.Text>\n                          <h6 data-testid=\"recipe-category\">\n                            { searchParam === 'Drink'\n                              ? recommendations[i + 1].strCategory\n                              : recommendations[i + 1].strAlcoholic }\n                          </h6>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                </Carousel.Item>\n              );\n            }\n            return null;\n          })}\n        </Carousel>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {(recommendations) ? renderRecommendations() : 'Loading...'}\n    </div>\n  );\n}\n\n// A pagina de detalhes de receita deverá fazer um API de search para renderizar as tags\n// 36 - Implemente as recomendações, para receitas de comida, a recomendação deverá ser bebida e vice-versa\n// Observações técnicas\n\n// Verifica se a requisição para a API de bebidas foi realizada. O endpoint utilizado deve ser\n// https://www.thecocktaildb.com/api/json/v1/1/search.php?s=;\n// Verifica se a requisição para a API de comidas foi realizada. O endpoint utilizado deve ser\n//  https://www.themealdb.com/api/json/v1/1/search.php?s=.\n\n// 37 - Implemente os cards de recomendação, onde serão 6 cards, mas mostrando apenas 2 e o\n// scroll é horizontal, similar a um carousel\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import { Container } from 'react-bootstrap';\nimport RevenueContext from '../context/RevenueContext';\nimport ShareIcon from '../images/shareIcon.svg';\nimport WhiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BlackHeartIcon from '../images/blackHeartIcon.svg';\nimport RecommendedRecipes from '../components/RecommendedRecipes';\nimport Loading from '../components/Loading';\n\nexport default function RecipeDetails() {\n  const { foods, setSearchParam, inProgress, setInProgress,\n    searchParam, fetchApi, isLoading, localStorageDoneRecipes,\n    localStorageFavorites, setLocalStorageFavorites,\n    localStorageInProgress } = useContext(RevenueContext);\n\n  const location = useLocation();\n  const idRecipe = location.pathname.split('/');\n  const [heartIcon, setheartIcon] = useState(WhiteHeartIcon);\n  const [alertMsg, setAlertMsg] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n\n  if (idRecipe[3] === 'in-progress' && inProgress === false)(setInProgress(!inProgress));\n  if (idRecipe[1] === 'comidas') setSearchParam('Meal');\n  if (idRecipe[1] === 'bebidas') setSearchParam('Drink');\n  const linkRecipeAPI = (searchParam === 'Meal')\n    ? `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idRecipe[2]}`\n    : `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idRecipe[2]}`;\n\n  let actualRecipe = [];\n  function checkLocalStorageFavorites() {\n    if (searchParam === 'Meal') {\n      actualRecipe = ([\n        {\n          id: foods[0].idMeal,\n          type: 'comida',\n          area: foods[0].strArea,\n          category: foods[0].strCategory,\n          alcoholicOrNot: '',\n          name: foods[0].strMeal,\n          image: foods[0].strMealThumb,\n        },\n      ]);\n    }\n    if (searchParam === 'Drink') {\n      actualRecipe = ([\n        {\n          id: foods[0].idDrink,\n          type: 'bebida',\n          area: '',\n          category: foods[0].strCategory,\n          alcoholicOrNot: foods[0].strAlcoholic,\n          name: foods[0].strDrink,\n          image: foods[0].strDrinkThumb,\n        },\n      ]);\n    }\n\n    let isFavorite;\n    if (localStorageFavorites !== null) {\n      isFavorite = localStorageFavorites\n        .find((favorite) => favorite.id === actualRecipe[0].id);\n    }\n    if (isFavorite !== undefined && heartIcon === WhiteHeartIcon) {\n      setheartIcon(BlackHeartIcon);\n    }\n    if (isFavorite === undefined && heartIcon === BlackHeartIcon) {\n      setheartIcon(WhiteHeartIcon);\n    }\n\n    return actualRecipe;\n  }\n\n  function getDateLocaleformat() {\n    const date = new Date();\n    const actualDate = date.toLocaleDateString();\n    return actualDate;\n  }\n\n  function saveDoneRecipe() {\n    actualRecipe[0].tags = foods[0].strTag ? foods[0].strTag : '';\n    actualRecipe[0].doneDate = getDateLocaleformat();\n\n    if (localStorageDoneRecipes) {\n      const newLocalStorageDoneRecipes = localStorageDoneRecipes;\n      newLocalStorageDoneRecipes.push(actualRecipe[0]);\n      setLocalStorageFavorites(newLocalStorageDoneRecipes);\n      localStorage\n        .setItem('doneRecipes', JSON\n          .stringify(localStorageDoneRecipes));\n    }\n  }\n\n  function shareRecipeLink() {\n    const URL = `http://localhost:3000/${idRecipe[1]}/${idRecipe[2]}`;\n    navigator.clipboard.writeText(URL);\n    const time = 3000;\n    setAlertMsg(true);\n    setTimeout(() => {\n      setAlertMsg(false);\n    }, time);\n    // alert('Link copiado!');\n  }\n\n  function whiteToBlackHeart() {\n    if (heartIcon === WhiteHeartIcon) {\n      const newLocalStorageFavorites = localStorageFavorites;\n      newLocalStorageFavorites.push(actualRecipe[0]);\n      setLocalStorageFavorites(newLocalStorageFavorites);\n      localStorage\n        .setItem('favoriteRecipes', JSON\n          .stringify(localStorageFavorites));\n      setheartIcon(BlackHeartIcon);\n    } else {\n      const newLocalStorageFavorites = localStorageFavorites;\n      newLocalStorageFavorites\n        .splice(localStorageFavorites\n          .indexOf(localStorageFavorites\n            .find((favorite) => favorite.id === actualRecipe[0].id)), 1);\n      setLocalStorageFavorites(newLocalStorageFavorites);\n      localStorage\n        .setItem('favoriteRecipes', JSON\n          .stringify(localStorageFavorites));\n      setheartIcon(WhiteHeartIcon);\n    }\n  }\n\n  function listContent() {\n    const ingredientsMeasureArray = [];\n    const VINTE = 20;\n    for (let index = 1; index <= VINTE; index += 1) {\n      if (foods[0][`strIngredient${index}`]) {\n        let measureValue = foods[0][`strMeasure${index}`];\n        if (!measureValue) measureValue = '';\n        ingredientsMeasureArray\n          .push(\n            [foods[0][`strIngredient${index}`], measureValue],\n          );\n      }\n    }\n    return ingredientsMeasureArray;\n  }\n\n  function handleCheckbox({ target }, index) {\n    // Carrega aas informações do localStorage in progress na variável localStorageInProgressAux\n    let localStorageInProgressAux = JSON\n      .parse(localStorage\n        .getItem('inProgressRecipes'));\n    // Se inProgressRecipes ainda não existir grava primeiro item, bebida ou comida\n    if (!localStorageInProgressAux) {\n      if (searchParam === 'Meal') {\n        localStorageInProgressAux = {\n          cocktails: {},\n          meals: { [actualRecipe[0].id]: [index] },\n        };\n      }\n      if (searchParam === 'Drink') {\n        localStorageInProgressAux = {\n          cocktails: { [actualRecipe[0].id]: [index] },\n          meals: {},\n        };\n      }\n      localStorage\n        .setItem('inProgressRecipes', JSON\n          .stringify(localStorageInProgressAux));\n\n    // Se inProgressRecipes já existe e verifica se aquela receita já foi iniciada\n    // Se a receita já foi iniciada inclui o ítem no array\n    // Se a receita ainda não foi iniciada, inclui a receita e seu respectivo array de ítens\n    } else {\n      if (searchParam === 'Meal') {\n        if (localStorageInProgressAux.meals[actualRecipe[0].id]) {\n          if (target.checked === true) {\n            localStorageInProgressAux.meals[actualRecipe[0].id].push(index);\n          } else {\n            localStorageInProgressAux.meals[actualRecipe[0].id]\n              .splice(localStorageInProgressAux.meals[actualRecipe[0].id]\n                .indexOf(index), 1);\n          }\n        } else {\n          localStorageInProgressAux.meals[actualRecipe[0].id] = [index];\n        }\n      }\n\n      if (searchParam === 'Drink') {\n        if (localStorageInProgressAux.cocktails[actualRecipe[0].id]) {\n          if (target.checked === true) {\n            localStorageInProgressAux.cocktails[actualRecipe[0].id].push(index);\n          } else {\n            localStorageInProgressAux.cocktails[actualRecipe[0].id]\n              .splice(localStorageInProgressAux.cocktails[actualRecipe[0].id]\n                .indexOf(index), 1);\n          }\n        } else {\n          localStorageInProgressAux.cocktails[actualRecipe[0].id] = [index];\n        }\n      }\n\n      localStorage\n        .setItem('inProgressRecipes', JSON\n          .stringify(localStorageInProgressAux));\n\n      setIsChecked(!isChecked);\n    }\n    return localStorageInProgressAux;\n  }\n\n  const finishButtonEnable = () => {\n    const checkedLength = document\n      .querySelectorAll('input[type=checkbox]:checked').length;\n    const checkboxLength = document.querySelectorAll('input[type=checkbox]').length;\n    if (checkedLength === checkboxLength) {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    fetchApi(linkRecipeAPI);\n  }, [searchParam]);\n\n  useEffect(() => {}, [isChecked]);\n\n  const render = () => {\n    const ZERO = 0;\n    if (foods.length > ZERO) {\n      checkLocalStorageFavorites();\n      let videoCode;\n      let typeFood;\n\n      const getInProgress = JSON\n        .parse(localStorage\n          .getItem('inProgressRecipes'));\n\n      if (searchParam === 'Meal') {\n        videoCode = (foods[0].strYoutube) ? foods[0].strYoutube.split('=') : undefined;\n        typeFood = 'meals';\n      } else {\n        typeFood = 'cocktails';\n      }\n      const check = (index) => {\n        if (getInProgress) {\n          const getInProgressAux = getInProgress;\n          if (getInProgressAux[typeFood][actualRecipe[0].id]) {\n            return getInProgressAux[typeFood][actualRecipe[0].id]\n              .includes(index);\n          }\n        }\n        return false;\n      };\n\n      const checkProgress = () => {\n        if (localStorageInProgress) {\n          const localStorageInProgressAux = localStorageInProgress;\n          if (localStorageInProgressAux[typeFood][actualRecipe[0].id]) {\n            return 'Continuar Receita';\n          }\n        }\n        return 'Iniciar Receita';\n      };\n\n      return (\n        <div>\n          <img\n            width=\"360px\"\n            data-testid=\"recipe-photo\"\n            src={ foods[0][`str${searchParam}Thumb`] }\n            alt={ foods[0][`str${searchParam}`] }\n          />\n          <div className=\"color-line\" />\n          <h1\n            data-testid=\"recipe-title\"\n            className=\"title-details\"\n          >\n            { foods[0][`str${searchParam}`] }\n          </h1>\n          <div className=\"d-flex justify-content-around\">\n            <a href onClick={ () => shareRecipeLink() }>\n              <img src={ ShareIcon } alt=\"Share Button\" data-testid=\"share-btn\" />\n              {alertMsg && <span> Link copiado!</span>}\n            </a>\n            <a href onClick={ () => whiteToBlackHeart() }>\n              <img src={ heartIcon } alt=\"Favorite Button\" data-testid=\"favorite-btn\" />\n            </a>\n          </div>\n          <h6 data-testid=\"recipe-category\" className=\"subtitle-details\">\n            { searchParam === 'Meal' ? foods[0].strCategory : foods[0].strAlcoholic }\n          </h6>\n          { }\n          <ul data-testid=\"0-recipe-card\">\n            { listContent().map((pairArray, index) => (\n\n              inProgress === false\n                ? (\n                  <li\n                    key={ index }\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                  >\n                    {pairArray[0]}\n                    { pairArray[1] ? ` - ${pairArray[1]}` : undefined }\n                  </li>\n                )\n                : (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                  >\n                    <input\n                      checked={ check(index) }\n                      className=\"lineThrough\"\n                      type=\"checkbox\"\n                      name={ index }\n                      id={ index }\n                      onChange={ (e) => {\n                        handleCheckbox(e, index, pairArray, typeFood);\n                      } }\n                    />\n                    {' '}\n                    <label\n                      className=\"lineThrough\"\n                      htmlFor={ index }\n                    >\n                      {pairArray[0] }\n                      { pairArray[1] ? ` - ${pairArray[1]}` : undefined }\n                    </label>\n                  </div>\n                )\n            )) }\n          </ul>\n          <h4 className=\"subtitle-details\">INSTRUCTIONS: </h4>\n          <p data-testid=\"instructions\" className=\"text-justify padd20\">\n            { foods[0].strInstructions }\n          </p>\n          { (videoCode) && (\n            <>\n              <h4 className=\"subtitle-details\">VIDEO: </h4>\n              <iframe\n                data-testid=\"video\"\n                className=\"width360\"\n                title=\"video\"\n                src={ `https://www.youtube.com/embed/${videoCode[1]}` }\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay;\n            clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </>\n          ) }\n          <h4 className=\"subtitle-details\">RECOMENDED: </h4>\n          <div className=\"width360\">\n            <RecommendedRecipes />\n          </div>\n          {(!localStorageDoneRecipes\n            .map((e) => e.id)\n            .find((e) => e === foods[0][`id${searchParam}`]))\n          && (\n            <div id=\"button-area\">\n              {inProgress === false\n                ? (\n                  <Link to={ `/${idRecipe[1]}/${idRecipe[2]}/in-progress` }>\n                    <button\n                      data-testid=\"start-recipe-btn\"\n                      className=\"bt-login font-app\"\n                      type=\"button\"\n                      onClick={ () => setInProgress(!inProgress) }\n                    >\n                      {checkProgress()}\n                    </button>\n                  </Link>\n                )\n                : (\n                  <Link to=\"/receitas-feitas\">\n                    <button\n                      data-testid=\"finish-recipe-btn\"\n                      className=\"bt-login font-app\"\n                      type=\"button\"\n                      onClick={ () => saveDoneRecipe() }\n                      disabled={ finishButtonEnable() }\n                    >\n                      Finalizar Receita\n                    </button>\n                  </Link>\n                )}\n            </div>\n          )}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"main-app recipe-details\">\n      {(isLoading) ? <Loading /> : render()}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div className=\"content-select-explore\">\n      Not Found\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport MainPage from './pages/MainPage';\nimport RecipeDetails from './pages/RecipeDetails';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ () => <Login title=\"Login\" /> } />\n        <Route exact path=\"/comidas\" component={ () => <MainPage title=\"Comidas\" /> } />\n        <Route exact path=\"/bebidas\" component={ () => <MainPage title=\"Bebidas\" /> } />\n        <Route path=\"/comidas/:recipeId\" component={ RecipeDetails } />\n        <Route path=\"/bebidas/:recipeId\" component={ RecipeDetails } />\n        <Route path=\"/comidas/:recipeId/in-progress\" component={ RecipeDetails } />\n        <Route path=\"/bebidas/:recipeId/in-progress\" component={ RecipeDetails } />\n        <Route\n          exact\n          path=\"/explorar\"\n          component={ () => <MainPage title=\"Explorar\" /> }\n        />\n        <Route\n          exact\n          path=\"/explorar/comidas\"\n          component={ () => <MainPage title=\"Explorar Comidas\" /> }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas\"\n          component={ () => <MainPage title=\"Explorar Bebidas\" /> }\n        />\n        <Route\n          exact\n          path=\"/explorar/comidas/ingredientes\"\n          component={ () => <MainPage title=\"Explorar Ingredientes\" /> }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ () => <MainPage title=\"Explorar Ingredientes\" /> }\n        />\n        <Route\n          exact\n          path=\"/explorar/comidas/area\"\n          component={ () => <MainPage title=\"Explorar Origem\" /> }\n        />\n        <Route\n          exact\n          path=\"/perfil\"\n          component={ () => <MainPage title=\"Perfil\" /> }\n        />\n        <Route\n          exact\n          path=\"/receitas-feitas\"\n          component={ () => <MainPage title=\"Receitas Feitas\" /> }\n        />\n        <Route\n          exact\n          path=\"/receitas-favoritas\"\n          component={ () => <MainPage title=\"Receitas Favoritas\" /> }\n        />\n        <Route component={ NotFound } />\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RevenueContext from './RevenueContext';\n\nconst Provider = ({ children }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [search, setSearch] = useState(false);\n  const [searchButton, setSearchButton] = useState(true);\n  const [foods, setFoods] = useState([]);\n  const [recommendations, setRecommendations] = useState();\n  const [categories, setCategories] = useState();\n  const [isLoading, setisLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState();\n  const [externFetchLink, setexternFetchLink] = useState();\n  const [inProgress, setInProgress] = useState(false);\n\n  const [localStorageFavorites, setLocalStorageFavorites] = useState(\n    JSON\n      .parse(localStorage\n        .getItem('favoriteRecipes')),\n  );\n\n  const [localStorageDoneRecipes, setLocalStorageDoneRecipes] = useState(\n    JSON\n      .parse(localStorage\n        .getItem('doneRecipes')),\n  );\n\n  const [localStorageInProgress, setLocalStorageInProgress] = useState(\n    JSON\n      .parse(localStorage\n        .getItem('inProgressRecipes')),\n  );\n\n  if (!localStorageInProgress) {\n    setLocalStorageInProgress({ cocktails: {}, meals: {} });\n    localStorage\n      .setItem('inProgressRecipes', JSON\n        .stringify({ cocktails: {}, meals: {} }));\n  }\n\n  if (!localStorageFavorites) {\n    setLocalStorageFavorites([]);\n    localStorage\n      .setItem('favoriteRecipes', JSON\n        .stringify([]));\n  }\n\n  if (!localStorageDoneRecipes) {\n    setLocalStorageDoneRecipes([]);\n    localStorage\n      .setItem('doneRecipes', JSON\n        .stringify([]));\n  }\n\n  const fetchApi = async (URL) => {\n    setisLoading(true);\n    const response = await fetch(URL);\n    const json = await response.json();\n    setisLoading(false);\n    if (searchParam === 'Drink') {\n      if (json.drinks) {\n        setFoods(json.drinks);\n      } else if (json.ingredients) {\n        setSearchParam('Ingredients');\n        setFoods(json.ingredients);\n      } else {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      }\n    }\n    console.log(searchParam);\n    if (searchParam === 'Meal') {\n      if (json.meals) {\n        setFoods(json.meals);\n      } else if (json.ingredients) {\n        setSearchParam('Ingredients');\n        setFoods(json.ingredients);\n      } else {\n        alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      }\n    }\n  };\n\n  const fetchRecommendations = async (URL) => {\n    const response = await fetch(URL);\n    const json = await response.json();\n    if (searchParam === 'Meal') setRecommendations(json.drinks);\n    if (searchParam === 'Drink') setRecommendations(json.meals);\n  };\n\n  const fetchByCategory = async (URL) => {\n    const response = await fetch(URL);\n    const json = await response.json();\n    if (searchParam === 'Drink') setFoods(json.drinks);\n    if (searchParam === 'Meal') setFoods(json.meals);\n  };\n\n  const fetchCategories = async (URL) => {\n    const response = await fetch(URL);\n    const json = await response.json();\n    setCategories(json);\n  };\n\n  const context = {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    search,\n    setSearch,\n    searchButton,\n    setSearchButton,\n    searchParam,\n    setSearchParam,\n    foods,\n    setFoods,\n    fetchApi,\n    isLoading,\n    setisLoading,\n    recommendations,\n    fetchRecommendations,\n    categories,\n    fetchCategories,\n    fetchByCategory,\n    externFetchLink,\n    setexternFetchLink,\n    inProgress,\n    setInProgress,\n    localStorageFavorites,\n    setLocalStorageFavorites,\n    localStorageDoneRecipes,\n    setLocalStorageDoneRecipes,\n    localStorageInProgress,\n    setLocalStorageInProgress,\n  };\n\n  return (\n    <RevenueContext.Provider value={ context }>\n      {children}\n    </RevenueContext.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from './context/Provider';\n\nReactDOM.render(\n  <Provider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}